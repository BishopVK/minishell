En "un 'lugar' de" la 'mancha "de" cuyo' nombre
	1. En
	2. un 'lugar' de
	3. la
	4. mancha "de" cuyo
	5. nombre

En "un 'lugar' de" la 'mancha "de" cuyo nombre
'
	1. En
	2. un 'lugar' de
	3. la
	4. mancha "de" cuyo nombre

En "un 'lugar' de" la 'mancha "de cuyo' nombre
	1. En
	2. un 'lugar' de
	3. la
	4. mancha "de cuyo
	5. nombre

En "un 'lugar' de la 'mancha "de" cuyo' nombre
"
	1. En
	2. un 'lugar' de la 'mancha de cuyo' nombre

"l'"s
	1. l's

"l'"s'
	1. l's
	ó: syntax error

"hola"a"a"a"a"
	1. holaaaaa

"hola"a'"a"a"a"'
	1. holaa"a"a"a"

"hola"a'"a"a"a"'""a
	1. holaa"a"a"a"a

"hola"a'"a"a"a"'""aa
	1. holaa"a"a"a"aa

"hola"a'"a"a"a"'""a"a"
	1. holaa"a"a"a"aa

"hola"a'"a"a"a"'""a"a"''''''
	1. holaa"a"a"a"aa

"$USER"a'"$USER"a"a"'""a"a"''''''
	danjimena"$USER"a"a"aa

$USER "$USER" '$USER' 123 $USER 456 "123 $USER 456" '123 $USER 456'
	arg[0]: bishopvk
	arg[1]: bishopvk
	arg[2]: $USER
	arg[3]: 123
	arg[4]: bishopvk
	arg[5]: 456
	arg[6]: 123 bishopvk 456
	arg[7]: 123 $USER 456

123 $USER 456 $MAIL 789 $$ 000 $,.-USER 123 $123MAIL $
	arg[0]: 123
	arg[1]: bishopvk
	arg[2]: 456
	arg[3]: minishell
	arg[4]: 789
	arg[5]: 970259
	arg[6]: 000
	arg[7]: $,.-USER
	arg[8]: 123
	arg[9]: 23NAME
	arg[10]: $

"123 $USER 456 $MAIL 789 $$ 000 $,.-USER 123 $MAIL $"
	arg[0]: 123 bishopvk 456 minishell 789 1231051 000 $,.-USER 123 23NAME $

esto|es<una<<prueba>de>>separadores completa
	arg[0]: esto			type: PARAMS	quotes: FALSE
	arg[1]: |				type: PIPE		quotes: FALSE
	arg[2]: es				type: PARAMS	quotes: FALSE
	arg[3]: <				type: INFILE	quotes: FALSE
	arg[4]: una				type: PARAMS	quotes: FALSE
	arg[5]: <<				type: HERE_DOC	quotes: FALSE
	arg[6]: prueba			type: PARAMS	quotes: FALSE
	arg[7]: >				type: OUTFILE	quotes: FALSE
	arg[8]: de				type: PARAMS	quotes: FALSE
	arg[9]: >>				type: APPEND	quotes: FALSE
	arg[10]: separadores	type: PARAMS	quotes: FALSE
	arg[11]: completa		type: PARAMS	quotes: FALSE

echo $"USER" $USER "$USER" $'USER' $"USER" $USER "$USER" $'USER'
	echo devuelve: USER danjimen danjimen USER USER danjimen danjimen USER

<Makefile cat|echo "hola qie tal">/dev/stdout
You entered: <Makefile cat|echo "hola qie tal">/dev/stdout
argc ==> 3
Parsed arguments:
arg[0]: <Makefile
arg[1]: cat|echo
arg[2]: hola qie tal>/dev/stdout

isainz-r@minishell> hola "que atdll adss sad 'fs ewwr'n" dfs 'sadf "hhh"  sdf'
You entered: hola "que atdll adss sad 'fs ewwr'n" dfs 'sadf "hhh"  sdf'
argc ==> 4
Parsed arguments:
arg[0]: hola
arg[1]: que atdll adss sad 'fs ewwr'n
arg[2]: dfs
arg[3]: sadf "hhh"  sdf


///////////////////////
//		infile		//
/////////////////////

cat txt.txt >aksjjs>jsd>ksj>ksjasdasd
//lo guarda en el ultimo archivo y crea todos los demás vacíos
// lo mismo para con append, con y sin espacios entre el > y el file name

danjimen@c1r12s1:~/Desktop/minishell$ cat <dani<txt.txt<adios.txt 
HOLA
danjimen@c1r12s1:~/Desktop/minishell$ cat <dani <txt.txt <adios.txt 
HOLA
danjimen@c1r12s1:~/Desktop/minishell$ cat <dani <txt.txt <adios
bash: adios: No such file or directory
danjimen@c1r12s1:~/Desktop/minishell$ cat <dani <txt <adios.txt 
bash: txt: No such file or directory

danjimen@c1r12s1:~/Desktop/minishell$ cd ../ | echo $?
0
// No se hace el cd pero si el siguiente comando

danjimen@c1r12s1:~/Desktop/minishell$ echo "hola inés" | cd ../
// No se hace el cd pero si el comando, pero como se dirige la salida al pipe...